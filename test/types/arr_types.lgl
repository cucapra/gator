type vec2 is float[2];
type vec3 is float[3];
type ivec2 is int[2];
with vec2 T: declare float dot(T x, T y);
with vec2 T: declare T normalize(T x);
with vec2 T: declare T -(T f);
with float T:declare T -(T f);
with int T:declare T -(T f);
with vec2 T: declare T +(T v1, T v2);
with ivec2 T: declare T +(T v1, T v2);
with vec2 T: declare T .*(T v1, T v2);
with vec3 T: with float U: declare T *(T v, U f);
with vec3 T: with float U: declare T *(U f, T v);
with float T:declare T +(T f1, T f2);

// TODO: it would be nice to make these declarations general in some way
declare bool[1][2] &&(bool[1][2] x, bool[1][2] y);
declare float[2][2] *(float[2][2] x, float y);
declare float[1][3] *(float y, float[3][1] x);
declare float[2][1] *(float[3][2] x, float[1][3] y);
declare float[2][2] *(float[2][2] x, float[2][2] y);
declare float[2][3] *(float[2][2] x, float[3][2] y);
declare float[1][2] +(float[1][2] x, float[1][2] y);
declare float[1] -(float[1] x);
declare float[1][2] -(float[1][2] x);

void main() {
    vec2 r1 = [1., 2.] + [-2.,-3.];
    print r1;

    ivec2 r2 = [2,3] + [-1,1];
    print r2;

    vec3 r3 = [3.,-4.,5.3] * 2.;
    print r3;

    vec3 r4 = 2. * [3.,4.2,-5.];
    print r4;

    vec2 r5 = [1.,2.4] .* [5.,0.2];
    print r5;

    float r6 = dot ([1.,2.], [3.,2.]);
    print r6;

    vec2 r7 = normalize ([2.,2.]);
    print r7;

    vec2 r8 = normalize ([2.,2.] + [1.,3.]);
    print r8;

    r8[0] = 2.;
    print(r8[0]);

    float r9 = r8[0] + r8[1];
    print(r9);

    float[1][2] r11 = [[1.], [2.]] + [[-2.2], [-3.]];
    print r11;

    float[2][2] r12 = [[3., 4.],[5., 0.6]] * 2.;
    print r12;

    float[1][3] r13 = 2. * [[0.5,-0.4,5.]];
    print r13;

    // // mat2*3 * mat3*1
    // // vec3->vec2 * vec 
    float[2][1] r14 = [[1., 2., 3.], [2., 1., 3.]] * [[1.], [2.], [3.]];
    print r14;

    float[2][2] r15 = [[1., 2.], [2., 2.]] * [[1., 2.], [1., 3.]];
    print r15;

    // //mat2*2 * mat2*3
    float[2][3] r16 = [[1., 2.], [1., 3.]] * [[1., 2., 3.], [2., 1., 3.]];
    print r16;

    // float[1][2] r17 = -[-[-2.2], [-3.]];
    // print r17;
    // TODO: fix?
}

