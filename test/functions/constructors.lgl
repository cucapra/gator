// It turns out that vector constructors can be treated as external functions from glsl!
// The only tricks are allowing overloading and getting the syntax to work out
// In particular, we require that vec'n' is not reserved just for types

declare float -(float x);

declare type vec2 is float[2];
declare type vec3 is float[3];
declare type vec4 is float[4];
declare type mat2x2 is float[2][2];
declare type mat3x3 is float[3][3];

declare vec2 vec2(float num);
declare vec2 vec2(float x, float y);
declare vec2 vec2(vec2 v);
declare vec2 vec2(vec3 v);
declare vec2 vec2(vec4 v);

declare vec3 vec3(float num);
declare vec3 vec3(float x, float y, float z);
declare vec3 vec3(float x, vec2 v); //...etc
declare vec3 vec3(vec2 v);
declare vec3 vec3(vec3 v);
declare vec3 vec3(vec4 v);

declare vec4 vec4(float num);
declare vec4 vec4(float x, float y, float z, float w);
declare vec4 vec4(vec2 v);
declare vec4 vec4(vec3 v);
declare vec4 vec4(vec3 v, float w); //...etc
declare vec4 vec4(vec4 v);

// We can do the same for matrices
declare mat2x2 mat2(
    float m11, float m12,
    float m21, float m22
);
declare mat2x2 mat2(mat3x3 m);

declare mat3x3 mat3(
    float m11, float m12, float m13,
    float m21, float m22, float m23,
    float m31, float m32, float m33);
declare mat3x3 mat3(float diag);
declare mat3x3 mat3(vec3 v1, vec3 v2, vec3 v3);
declare mat3x3 mat3(mat2x2 m);

void main() {
    // Taken almost directly from
    // https://en.wikibooks.org/wiki/GLSL_Programming/Vector_and_Matrix_Operations#Constructors

    vec2 s11 = vec2(1.0, 2.0);
    vec3 s12 = vec3(1.0, 0.0, 0.0);
    vec4 s13 = vec4(0.0, 0.0, 0.0, 1.0);
    print s11;
    print s12;
    print s13;

    vec2 s21 = vec2(1.0); // = vec2(1.0, 1.0)
    vec4 s22 = vec4(0.0); // = vec4(0.0, 0.0, 0.0, 0.0)
    print s21;
    print s22;

    vec4 s31 = vec4(-1.0, 2.5, 4.0, 1.0);
    vec3 s32 = vec3(s31); // = vec3(-1.0, 2.5, 4.0)
    vec2 s33 = vec2(s32); // = vec2(-1.0, 2.5)
    print s31;
    print s32;
    print s33;

    vec2 s41 = vec2(0.1, 0.2);
    vec3 s42 = vec3(0.0, s41); // = vec3(0.0, 0.1, 0.2)
    vec4 s43 = vec4(s42, 1.0); // = vec4(0.0, 0.1, 0.2, 1.0)
    print s41;
    print s42;
    print s43;

    mat3x3 s51 = mat3(
        1.1, 2.1, 3.1, // first column (not row!)
        1.2, 2.2, 3.2, // second column
        1.3, 2.3, 3.3  // third column
    );
    mat3x3 s52 = mat3(1.0); // puts 1.0 on the diagonal, all other components are 0.0
    vec3 column0 = vec3(0.0, 2.0, 0.0);
    vec3 column1 = vec3(1.0, 0.0, 0.0);
    vec3 column2 = vec3(0.0, 0.0, 1.0);
    mat3x3 s53 = mat3(column0, column1, column2); // sets columns of matrix n
    print s51;
    print s52;
    print s53;

    mat2x2 s61 = mat2(
        1.1, 2.1, 
        1.2, 2.2
    );
    mat3x3 s62 = mat3(s61); // = mat3(
     // 1.1, 2.1, 0.0,   
     // 1.2, 2.2, 0.0,
     // 0.0, 0.0, 1.0)
    mat2x2 s63 = mat2(s62); // = s61
    print s61;
    print s62;
    print s63;
}
