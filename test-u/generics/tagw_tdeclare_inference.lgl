// This could be super cool if it works
// The fails are probably the more interesting part
// But the stuff that typechecks can be pretty cool too

declare type vec3 is float[3];

type pos is vec3;
type color is vec3;
type tinted is color;

with vec T:
declare float dot(T x, T y);

// This could be even more powerful, but we're not there yet
with vec T:
declare T normalize(T x);

with vec T:
float normed_dot(T x, T y) {
    T normx = normalize(x);
    T normy = normalize(y);
    return dot(normx, normy);
}

void main() {
    pos vert = [1., 1., 1.];
    pos unitx = [1., 0., 0.];
    color red = [1., 0., 0.];
    color purple = [.5, 0., .5];
    tinted tred = [1., 0., .2];

    print dot(vert, unitx);
    print dot(purple, tred);

    pos norm_vert = normalize(vert);
    print norm_vert;
    print normed_dot(red, tred);
    print normed_dot(normalize(tred), normalize(purple)) + normed_dot(normalize(vert), unitx);
}
