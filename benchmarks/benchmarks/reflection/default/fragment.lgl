#"precision mediump float;";

using "../../glsl_defs.lgl";

frame model has dimension 3;
frame world has dimension 3;
frame view has dimension 3;

type color is vec3;
type alphaColor is vec4;

varying cart3<model>.point vPosition;
varying cart3<model>.normal vNormal;
uniform samplerCube<alphaColor> uSkybox;
canon uniform hom<world>.transformation<view> uView;
canon uniform hom<model>.transformation<world> uModel;
canon uniform cart3<model>.normalTransformation<view> uNormalMatrix;
canon uniform cart3<view>.transformation<model> uInverseViewTransform;

void main() {
    auto N = normalize(uNormalMatrix * vNormal);
    auto V = -(vPosition in view);
    auto R = -reflect(V,N);
    gl_FragColor = textureCube(uSkybox, R in model);
}
