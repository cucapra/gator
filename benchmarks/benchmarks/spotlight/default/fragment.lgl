#"precision mediump float;";
using "../../glsl_defs.lgl";

type color is vec3;
type alphaColor is vec4;

// Reference Frame Declarations

frame model has dimension 3;
frame world has dimension 3;
frame camera has dimension 3;
frame light has dimension 3;

// Global Variables

varying cart3<model>.point vPosition;
canon uniform hom<model>.transformation<world> uModel;
canon uniform hom<world>.transformation<camera> uView;
varying cart3<model>.vector vNormal;
uniform cart3<light>.point uLight;
canon uniform hom<light>.transformation<world> uLightTrans;

// Shader Code

void main() {
    color ambient = [.1, 0., 0.];
    color diffColor = [0.2, 0.8, 0.4];
    color specColor = [1.0, 1.0, 1.0];

    auto worldPos = vPosition in world;
    auto camPos = worldPos in camera;
    auto worldNorm = normalize(vNormal in world);

    auto lightDir = normalize((uLight in world) - worldPos);
    auto lightWorldDot = dot(lightDir, worldNorm);
    scalar diffuse = max(lightWorldDot, 0.0);

    auto reflectDir = normalize(reflect(-lightDir, worldNorm) in camera);

    scalar specular = pow(max(dot(normalize(-camPos), reflectDir), 0.), 32.);


    //Setup potlight pointing towards the world center at all times
    auto spotlightDir = normalize(-uLight in world);
    scalar thetaLimit = -.999;
    scalar dirDot = dot(lightDir, spotlightDir);

    if(dirDot > thetaLimit){
        gl_FragColor = vec4(ambient, 1.0);
    }else{
        gl_FragColor = vec4(ambient + diffuse * diffColor + specular * specColor, 1.0);
    }
    
}