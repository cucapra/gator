tag coord model is vec3;
tag coord world is vec3;
tag coord camera is vec3;
tag coord projective is vec3;
tag coord hom<`t : vec3> is vec4;

declare vec4 vec4(vec3 v, float f);
declare vec3 vec3(vec4 v);

attribute model aPosition;
attribute model aNormal;
varying model vPosition;
varying model vNormal;
uniform hom<camera>->hom<projective> uProjection;
uniform hom<world>->hom<camera> uView;
uniform hom<model>->hom<world> uModel;

canon hom<`t> homify<`t : vec3>(`t v) { return vec4(v as vec3, 1.) as hom<`t>; }
canon `t hom_reduce<`t : vec3>(hom<`t> v) { return vec3(v as vec4) as `t; }


void main() {
  vNormal = aNormal;
  vPosition = aPosition;
  hom<projective> gl_Position = aPosition in hom<projective>;
}